import React, { useState } from "react";
import tw from "tailwind-styled-components";

// interface for table rows
interface TableRow {
  a: string;
  b: string;
  c: string;
}

const ExpenseList: React.FC = () => {
  // state to keep track of table rows
  const [rows, setRows] = useState<TableRow[]>([]);
  // state to keep track of total amount
  const [total, setTotal] = useState<number>(0);

  // function to handle form submission
  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();

    // get form data
    const formData = new FormData(event.currentTarget);
    const a = formData.get("a") as string;
    const b = formData.get("b") as string;
    const c = formData.get("c") as string;
    const amount = Number(formData.get("amount"));

    // add row to table
    setRows([...rows, { a, b, c }]);

    // calculate total amount
    setTotal(total + amount);

    // reset form fields
    event.currentTarget.reset();
  };

  return (
    <div>
      <form onSubmit={handleSubmit}>
        <div>
          <label htmlFor="a">Category A</label>
          <select id="a" name="a" required>
            <option value="">Select an option</option>
            <option value="A1">A1</option>
            <option value="A2">A2</option>
            <option value="A3">A3</option>
          </select>
        </div>
        <div>
          <label htmlFor="b">Category B</label>
          <select id="b" name="b" required>
            <option value="">Select an option</option>
            <option value="B1">B1</option>
            <option value="B2">B2</option>
            <option value="B3">B3</option>
          </select>
        </div>
        <div>
          <label htmlFor="c">Category C</label>
          <select id="c" name="c" required>
            <option value="">Select an option</option>
            <option value="C1">C1</option>
            <option value="C2">C2</option>
            <option value="C3">C3</option>
          </select>
        </div>
        <div>
          <label htmlFor="amount">Amount</label>
          <Input
            type="number"
            id="amount"
            name="amount"
            min="0"
            step="0.01"
            required
          />
        </div>
        <Button type="submit">Add Item</Button>
      </form>
      <Table>
        <THead>
          <TR>
            <TH>Category A</TH>
            <TH>Category B</TH>
            <TH>Category C</TH>
            <TH></TH>
          </TR>
        </THead>
        <tbody>
          {rows.map((row, index) => (
            <TR key={index}>
              <TD>{row.a}</TD>
              <TD>{row.b}</TD>
              <TD>{row.c}</TD>
              <TD>
                <Button>Delete</Button>
              </TD>
            </TR>
          ))}
        </tbody>
      </Table>
      <div>
        <strong>Total:</strong> {total}
      </div>
    </div>
  );
};

export default ExpenseList;

// styled components using tailwindcss
const Input = tw.input`
  rounded-md
  border-gray-300
  shadow-sm
  focus:border-indigo-300
  focus:ring
  focus:ring-indigo-200
  focus:ring-opacity-50
`;

const Button = tw.button`
  inline-flex
  justify-center
  py-2
  px-4
  border
  border-transparent
  shadow-sm
  text-sm
  font-medium
  rounded-md
  text-white
  bg-indigo-600
  hover:bg-indigo-700
  focus:outline-none
  focus:ring-2
  focus:ring-offset-2
  focus:ring-indigo-500
`;

const Table = tw.table`
  min-w-full
  divide-y
  divide-gray-200
`;

const THead = tw.thead`
  bg-gray-50
  divide-y
  divide-gray-200
`;

const TH = tw.th`
  px-6
  py-3
  text-left
  text-xs
  font-medium
  text-gray-500
  uppercase
  tracking-wider
`;

const TD = tw.td`
  px-6
  py-4
  whitespace-nowrap
`;

const TR = tw.tr`
  transition-all
  hover:bg-gray-100
  hover:shadow-lg
`;
